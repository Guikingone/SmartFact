version: "3.1"

services:
    # Core configuration
    debian:
        container_name: ${CONTAINER_NAME}_debian
        build: .
        volumes:
            - './:/var/www/smartfact:rw'

    nginx:
        container_name: ${CONTAINER_NAME}_nginx
        image: nginx
        ports:
            - '${NGINX_PORT}:80'
        links:
            - debian
        volumes:
            - './:/var/www/smartfact:rw'
            - './docker/nginx/conf/core/nginx.conf:/etc/nginx/conf/nginx.conf:ro'
            - './docker/nginx/conf/app/dev:/etc/nginx/conf.d:ro'
            # Uncomment this line for production.
            # - './docker/nginx/conf/app/prod:/etc/nginx/conf.d:ro'
            - './docker/nginx/logs/:/var/log/nginx'

    nodejs:
        container_name: ${CONTAINER_NAME}_node
        image: node
        ports:
            - '${NODE_PORT}:32793'
        links:
            - debian
        volumes:
            - './:/var/www/smartfact'

    php-fpm:
        container_name: ${CONTAINER_NAME}_php-fpm
        build: './docker/php'
        ports:
            - '${PHP_PORT}:9000'
        links:
            - debian
        volumes:
            - './:/var/www/smartfact:rw'
            - './docker/php/conf/:/usr/local/etc/php'

    # DB configuration
    mongodb:
        container_name: ${CONTAINER_NAME}_mongodb
        image: mongo:latest
        ports:
            - '${MONGO_PORT}:27017'
        volumes:
            - 'mongo_docker:/data/db'
        restart: always

    postgres:
        container_name: ${CONTAINER_NAME}_postgres
        image: postgres:latest
        environment:
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_NAME}'
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - 'postgres_docker:/var/lib/postgresql/data'
        restart: always

    mysql:
        container_name: ${CONTAINER_NAME}_mysql
        image: mysql:latest
        environment:
            MYSQL_DATABASE: '${DB_NAME}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        ports:
            - '${MYSQL_PORT}:3306'
        volumes:
            - 'mysql_docker:/var/lib/mysql'
        restart: always

    # Testing configuration
    blackfire:
        container_name: ${CONTAINER_NAME}_blackfire
        image: blackfire/blackfire
        environment:
            - '${BLACKFIRE_CLIENT_ID}'
            - '${BLACKFIRE_CLIENT_TOKEN}'
            - '${BLACKFIRE_SERVER_ID}'
            - '${BLACKFIRE_SERVER_TOKEN}'
        links:
            - debian
        volumes:
            - './:/var/www/smartfact:rw'
        restart: always

volumes:
    mongo_docker:
    postgres_docker:
    mysql_docker:
